  services:
    frontend:
      container_name: frontend
      build:
        context: ./apps/frontend
        dockerfile: Dockerfile.dev
      ports:
        - "5173:5173"
      volumes:
        - ./apps/frontend:/app
        - /app/node_modules
      depends_on:
        - backend
      networks:
        - network
      restart: unless-stopped

    backend:
      container_name: backend
      build:
        context: ./apps/backend
        dockerfile: Dockerfile.dev
      ports:
        - "3000:3000"
      env_file:
        - .env
      environment:
        - DATABASE_URL=${DATABASE_URL}
      volumes:
        - ./apps/backend:/app
        - /app/node_modules
      command: npm run start:dev
      depends_on:
        - postgres
      networks:
        - network
      restart: unless-stopped

    postgres:
      container_name: postgres
      image: postgres:latest
      ports:
        - "5432:5432"
      env_file:
        - .env
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - network
      restart: unless-stopped

  volumes:
    postgres_data:

  networks:
    network:
      driver: bridge
